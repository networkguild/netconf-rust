name: CI
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

defaults:
  run:
    shell: bash

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update rust
        run: rustup update stable && rustup default stable
      - name: Add rustfmt
        run: rustup component add rustfmt
      - name: Run rustfmt
        run: cargo fmt --all --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update rust
        run: rustup update stable && rustup default stable
      - name: Add clippy
        run: rustup component add clippy
      - name: Run clippy
        run: cargo clippy --workspace --all-targets --no-deps -- -D warnings

  lockfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update rust
        run: rustup update stable && rustup default stable
      - name: Check netconf-async lockfile
        run: cargo update -p netconf-async --locked
      - name: Check netconf-cli lockfile
        run: cargo update -p netconf-cli --locked

  test:
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: 1
      CARGO_PROFILE_DEV_DEBUG: 1
      CARGO_PROFILE_TEST_DEBUG: 1
      CARGO_INCREMENTAL: 0
      CARGO_PUBLIC_NETWORK_TESTS: 1
      # Workaround for https://github.com/rust-lang/rustup/issues/3036
      RUSTUP_WINDOWS_PATH_ADD_BIN: 0
    strategy:
      matrix:
        include:
          - name: Linux x86_64 stable
            os: ubuntu-latest
            rust: stable
            other: x86_64-unknown-linux-gnu
          - name: Linux aarch64 stable
            os: ubuntu-latest
            rust: stable
            other: aarch64-unknown-linux-gnu
          - name: macOS x86_64 stable
            os: macos-14
            rust: stable
            other: x86_64-apple-darwin
          - name: macOS aarch64 stable
            os: macos-14
            rust: stable
            other: aarch64-apple-darwin
          - name: Windows x86_64 MSVC stable
            os: windows-latest
            rust: stable-msvc
            other: i686-pc-windows-msvc
    name: Tests ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update stable rust
        run: rustup update --no-self-update stable
      - name: Update ${{ matrix.rust }} rust
        run: rustup update --no-self-update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - name: Add ${{ matrix.other }} target
        run: rustup target add ${{ matrix.other }}
      - name: Install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update -y && sudo apt install lldb gcc-multilib libsecret-1-0 libsecret-1-dev -y
      - name: Add rustfmt
        if: matrix.os == 'ubuntu-latest'
        run: rustup component add rustfmt || echo "rustfmt not available"
      - name: Run tests
        if: matrix.os != 'windows-latest'
        run: cargo test
      - name: Runs tests windows
        if: matrix.os == 'windows-latest'
        run: cargo test --features openssl-on-win32,vendored-openssl,default
